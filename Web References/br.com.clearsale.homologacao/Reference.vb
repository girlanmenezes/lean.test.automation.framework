'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace br.com.clearsale.homologacao
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://www.clearsale.com.br/integration"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(TransactionStatus))>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SendOrders2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendOrdersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPackageStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrderStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrdersStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReturnAnalysisOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetOrderAsReturnedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAnalystCommentsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OrderChargeBackOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OrderChargeBackByNsuOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SubmitInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckOrderStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetQuizURLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPackageStatusCustomOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Plenus.Automation.Framework.My.MySettings.Default.Plenus_Automation_Framework_br_com_clearsale_homologacao_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SendOrders2Completed As SendOrders2CompletedEventHandler
        
        '''<remarks/>
        Public Event SendOrdersCompleted As SendOrdersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPackageStatusCompleted As GetPackageStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrderStatusCompleted As GetOrderStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrdersStatusCompleted As GetOrdersStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReturnAnalysisCompleted As GetReturnAnalysisCompletedEventHandler
        
        '''<remarks/>
        Public Event SetOrderAsReturnedCompleted As SetOrderAsReturnedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAnalystCommentsCompleted As GetAnalystCommentsCompletedEventHandler
        
        '''<remarks/>
        Public Event OrderChargeBackCompleted As OrderChargeBackCompletedEventHandler
        
        '''<remarks/>
        Public Event OrderChargeBackByNsuCompleted As OrderChargeBackByNsuCompletedEventHandler
        
        '''<remarks/>
        Public Event SubmitInfoCompleted As SubmitInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckOrderStatusCompleted As CheckOrderStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetQuizURLCompleted As GetQuizURLCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPackageStatusCustomCompleted As GetPackageStatusCustomCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/SendOrders2", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendOrders2(ByVal entityCode As String, ByVal pedidos As String) As String
            Dim results() As Object = Me.Invoke("SendOrders2", New Object() {entityCode, pedidos})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendOrders2Async(ByVal entityCode As String, ByVal pedidos As String)
            Me.SendOrders2Async(entityCode, pedidos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendOrders2Async(ByVal entityCode As String, ByVal pedidos As String, ByVal userState As Object)
            If (Me.SendOrders2OperationCompleted Is Nothing) Then
                Me.SendOrders2OperationCompleted = AddressOf Me.OnSendOrders2OperationCompleted
            End If
            Me.InvokeAsync("SendOrders2", New Object() {entityCode, pedidos}, Me.SendOrders2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSendOrders2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SendOrders2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendOrders2Completed(Me, New SendOrders2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/SendOrders", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendOrders(ByVal entityCode As String, ByVal xml As String) As String
            Dim results() As Object = Me.Invoke("SendOrders", New Object() {entityCode, xml})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendOrdersAsync(ByVal entityCode As String, ByVal xml As String)
            Me.SendOrdersAsync(entityCode, xml, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendOrdersAsync(ByVal entityCode As String, ByVal xml As String, ByVal userState As Object)
            If (Me.SendOrdersOperationCompleted Is Nothing) Then
                Me.SendOrdersOperationCompleted = AddressOf Me.OnSendOrdersOperationCompleted
            End If
            Me.InvokeAsync("SendOrders", New Object() {entityCode, xml}, Me.SendOrdersOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendOrdersOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendOrdersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendOrdersCompleted(Me, New SendOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/GetPackageStatus", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPackageStatus(ByVal entityCode As String, ByVal packageID As String) As String
            Dim results() As Object = Me.Invoke("GetPackageStatus", New Object() {entityCode, packageID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPackageStatusAsync(ByVal entityCode As String, ByVal packageID As String)
            Me.GetPackageStatusAsync(entityCode, packageID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPackageStatusAsync(ByVal entityCode As String, ByVal packageID As String, ByVal userState As Object)
            If (Me.GetPackageStatusOperationCompleted Is Nothing) Then
                Me.GetPackageStatusOperationCompleted = AddressOf Me.OnGetPackageStatusOperationCompleted
            End If
            Me.InvokeAsync("GetPackageStatus", New Object() {entityCode, packageID}, Me.GetPackageStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPackageStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPackageStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPackageStatusCompleted(Me, New GetPackageStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/GetOrderStatus", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOrderStatus(ByVal entityCode As String, ByVal orderID As String) As String
            Dim results() As Object = Me.Invoke("GetOrderStatus", New Object() {entityCode, orderID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrderStatusAsync(ByVal entityCode As String, ByVal orderID As String)
            Me.GetOrderStatusAsync(entityCode, orderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrderStatusAsync(ByVal entityCode As String, ByVal orderID As String, ByVal userState As Object)
            If (Me.GetOrderStatusOperationCompleted Is Nothing) Then
                Me.GetOrderStatusOperationCompleted = AddressOf Me.OnGetOrderStatusOperationCompleted
            End If
            Me.InvokeAsync("GetOrderStatus", New Object() {entityCode, orderID}, Me.GetOrderStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrderStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrderStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrderStatusCompleted(Me, New GetOrderStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/GetOrdersStatus", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOrdersStatus(ByVal entityCode As String, ByVal xml As String) As String
            Dim results() As Object = Me.Invoke("GetOrdersStatus", New Object() {entityCode, xml})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrdersStatusAsync(ByVal entityCode As String, ByVal xml As String)
            Me.GetOrdersStatusAsync(entityCode, xml, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrdersStatusAsync(ByVal entityCode As String, ByVal xml As String, ByVal userState As Object)
            If (Me.GetOrdersStatusOperationCompleted Is Nothing) Then
                Me.GetOrdersStatusOperationCompleted = AddressOf Me.OnGetOrdersStatusOperationCompleted
            End If
            Me.InvokeAsync("GetOrdersStatus", New Object() {entityCode, xml}, Me.GetOrdersStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrdersStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrdersStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrdersStatusCompleted(Me, New GetOrdersStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/GetReturnAnalysis", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReturnAnalysis(ByVal entityCode As String) As String
            Dim results() As Object = Me.Invoke("GetReturnAnalysis", New Object() {entityCode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReturnAnalysisAsync(ByVal entityCode As String)
            Me.GetReturnAnalysisAsync(entityCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReturnAnalysisAsync(ByVal entityCode As String, ByVal userState As Object)
            If (Me.GetReturnAnalysisOperationCompleted Is Nothing) Then
                Me.GetReturnAnalysisOperationCompleted = AddressOf Me.OnGetReturnAnalysisOperationCompleted
            End If
            Me.InvokeAsync("GetReturnAnalysis", New Object() {entityCode}, Me.GetReturnAnalysisOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReturnAnalysisOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReturnAnalysisCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReturnAnalysisCompleted(Me, New GetReturnAnalysisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/SetOrderAsReturned", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetOrderAsReturned(ByVal entityCode As String, ByVal orderID As String) As String
            Dim results() As Object = Me.Invoke("SetOrderAsReturned", New Object() {entityCode, orderID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetOrderAsReturnedAsync(ByVal entityCode As String, ByVal orderID As String)
            Me.SetOrderAsReturnedAsync(entityCode, orderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOrderAsReturnedAsync(ByVal entityCode As String, ByVal orderID As String, ByVal userState As Object)
            If (Me.SetOrderAsReturnedOperationCompleted Is Nothing) Then
                Me.SetOrderAsReturnedOperationCompleted = AddressOf Me.OnSetOrderAsReturnedOperationCompleted
            End If
            Me.InvokeAsync("SetOrderAsReturned", New Object() {entityCode, orderID}, Me.SetOrderAsReturnedOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetOrderAsReturnedOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetOrderAsReturnedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetOrderAsReturnedCompleted(Me, New SetOrderAsReturnedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/GetAnalystComments", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAnalystComments(ByVal entityCode As String, ByVal orderID As String, ByVal getAll As Boolean) As String
            Dim results() As Object = Me.Invoke("GetAnalystComments", New Object() {entityCode, orderID, getAll})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAnalystCommentsAsync(ByVal entityCode As String, ByVal orderID As String, ByVal getAll As Boolean)
            Me.GetAnalystCommentsAsync(entityCode, orderID, getAll, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAnalystCommentsAsync(ByVal entityCode As String, ByVal orderID As String, ByVal getAll As Boolean, ByVal userState As Object)
            If (Me.GetAnalystCommentsOperationCompleted Is Nothing) Then
                Me.GetAnalystCommentsOperationCompleted = AddressOf Me.OnGetAnalystCommentsOperationCompleted
            End If
            Me.InvokeAsync("GetAnalystComments", New Object() {entityCode, orderID, getAll}, Me.GetAnalystCommentsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAnalystCommentsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAnalystCommentsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAnalystCommentsCompleted(Me, New GetAnalystCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/OrderChargeBack", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function OrderChargeBack(ByVal entityCode As String, ByVal Xml As String, ByVal Note As String) As TransactionStatusCbk
            Dim results() As Object = Me.Invoke("OrderChargeBack", New Object() {entityCode, Xml, Note})
            Return CType(results(0),TransactionStatusCbk)
        End Function
        
        '''<remarks/>
        Public Overloads Sub OrderChargeBackAsync(ByVal entityCode As String, ByVal Xml As String, ByVal Note As String)
            Me.OrderChargeBackAsync(entityCode, Xml, Note, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OrderChargeBackAsync(ByVal entityCode As String, ByVal Xml As String, ByVal Note As String, ByVal userState As Object)
            If (Me.OrderChargeBackOperationCompleted Is Nothing) Then
                Me.OrderChargeBackOperationCompleted = AddressOf Me.OnOrderChargeBackOperationCompleted
            End If
            Me.InvokeAsync("OrderChargeBack", New Object() {entityCode, Xml, Note}, Me.OrderChargeBackOperationCompleted, userState)
        End Sub
        
        Private Sub OnOrderChargeBackOperationCompleted(ByVal arg As Object)
            If (Not (Me.OrderChargeBackCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OrderChargeBackCompleted(Me, New OrderChargeBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/OrderChargeBackByNsu", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function OrderChargeBackByNsu(ByVal entityCode As String, ByVal cartaoBandeira As Integer, ByVal nsu As String, ByVal conciliadorCode As String) As TransactionStatusCbk
            Dim results() As Object = Me.Invoke("OrderChargeBackByNsu", New Object() {entityCode, cartaoBandeira, nsu, conciliadorCode})
            Return CType(results(0),TransactionStatusCbk)
        End Function
        
        '''<remarks/>
        Public Overloads Sub OrderChargeBackByNsuAsync(ByVal entityCode As String, ByVal cartaoBandeira As Integer, ByVal nsu As String, ByVal conciliadorCode As String)
            Me.OrderChargeBackByNsuAsync(entityCode, cartaoBandeira, nsu, conciliadorCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OrderChargeBackByNsuAsync(ByVal entityCode As String, ByVal cartaoBandeira As Integer, ByVal nsu As String, ByVal conciliadorCode As String, ByVal userState As Object)
            If (Me.OrderChargeBackByNsuOperationCompleted Is Nothing) Then
                Me.OrderChargeBackByNsuOperationCompleted = AddressOf Me.OnOrderChargeBackByNsuOperationCompleted
            End If
            Me.InvokeAsync("OrderChargeBackByNsu", New Object() {entityCode, cartaoBandeira, nsu, conciliadorCode}, Me.OrderChargeBackByNsuOperationCompleted, userState)
        End Sub
        
        Private Sub OnOrderChargeBackByNsuOperationCompleted(ByVal arg As Object)
            If (Not (Me.OrderChargeBackByNsuCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OrderChargeBackByNsuCompleted(Me, New OrderChargeBackByNsuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SubmitInfo(ByVal entityCode As String, ByVal xmlDados As String) As String
            Dim results() As Object = Me.Invoke("SubmitInfo", New Object() {entityCode, xmlDados})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SubmitInfoAsync(ByVal entityCode As String, ByVal xmlDados As String)
            Me.SubmitInfoAsync(entityCode, xmlDados, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SubmitInfoAsync(ByVal entityCode As String, ByVal xmlDados As String, ByVal userState As Object)
            If (Me.SubmitInfoOperationCompleted Is Nothing) Then
                Me.SubmitInfoOperationCompleted = AddressOf Me.OnSubmitInfoOperationCompleted
            End If
            Me.InvokeAsync("SubmitInfo", New Object() {entityCode, xmlDados}, Me.SubmitInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSubmitInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SubmitInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SubmitInfoCompleted(Me, New SubmitInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/CheckOrderStatus", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckOrderStatus(ByVal entityCode As String, ByVal pedidoIDCliente As String) As String
            Dim results() As Object = Me.Invoke("CheckOrderStatus", New Object() {entityCode, pedidoIDCliente})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckOrderStatusAsync(ByVal entityCode As String, ByVal pedidoIDCliente As String)
            Me.CheckOrderStatusAsync(entityCode, pedidoIDCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckOrderStatusAsync(ByVal entityCode As String, ByVal pedidoIDCliente As String, ByVal userState As Object)
            If (Me.CheckOrderStatusOperationCompleted Is Nothing) Then
                Me.CheckOrderStatusOperationCompleted = AddressOf Me.OnCheckOrderStatusOperationCompleted
            End If
            Me.InvokeAsync("CheckOrderStatus", New Object() {entityCode, pedidoIDCliente}, Me.CheckOrderStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckOrderStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckOrderStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckOrderStatusCompleted(Me, New CheckOrderStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/GetQuizURL", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQuizURL(ByVal entityCode As String, ByVal orderID As String) As String
            Dim results() As Object = Me.Invoke("GetQuizURL", New Object() {entityCode, orderID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQuizURLAsync(ByVal entityCode As String, ByVal orderID As String)
            Me.GetQuizURLAsync(entityCode, orderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQuizURLAsync(ByVal entityCode As String, ByVal orderID As String, ByVal userState As Object)
            If (Me.GetQuizURLOperationCompleted Is Nothing) Then
                Me.GetQuizURLOperationCompleted = AddressOf Me.OnGetQuizURLOperationCompleted
            End If
            Me.InvokeAsync("GetQuizURL", New Object() {entityCode, orderID}, Me.GetQuizURLOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQuizURLOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQuizURLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQuizURLCompleted(Me, New GetQuizURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.clearsale.com.br/integration/GetPackageStatusCustom", RequestNamespace:="http://www.clearsale.com.br/integration", ResponseNamespace:="http://www.clearsale.com.br/integration", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPackageStatusCustom(ByVal entityCode As String, ByVal transactionID As String) As String
            Dim results() As Object = Me.Invoke("GetPackageStatusCustom", New Object() {entityCode, transactionID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPackageStatusCustomAsync(ByVal entityCode As String, ByVal transactionID As String)
            Me.GetPackageStatusCustomAsync(entityCode, transactionID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPackageStatusCustomAsync(ByVal entityCode As String, ByVal transactionID As String, ByVal userState As Object)
            If (Me.GetPackageStatusCustomOperationCompleted Is Nothing) Then
                Me.GetPackageStatusCustomOperationCompleted = AddressOf Me.OnGetPackageStatusCustomOperationCompleted
            End If
            Me.InvokeAsync("GetPackageStatusCustom", New Object() {entityCode, transactionID}, Me.GetPackageStatusCustomOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPackageStatusCustomOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPackageStatusCustomCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPackageStatusCustomCompleted(Me, New GetPackageStatusCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.clearsale.com.br/integration")>  _
    Partial Public Class TransactionStatusCbk
        Inherits TransactionStatus
        
        Private ordersField() As Order
        
        '''<remarks/>
        Public Property Orders() As Order()
            Get
                Return Me.ordersField
            End Get
            Set
                Me.ordersField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.clearsale.com.br/integration")>  _
    Partial Public Class Order
        
        Private orderIdField As String
        
        Private statusField As StatusCode
        
        Private messageField As String
        
        '''<remarks/>
        Public Property OrderId() As String
            Get
                Return Me.orderIdField
            End Get
            Set
                Me.orderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As StatusCode
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.clearsale.com.br/integration")>  _
    Public Enum StatusCode
        
        '''<remarks/>
        Invalido
        
        '''<remarks/>
        OK
        
        '''<remarks/>
        UserNotFound
        
        '''<remarks/>
        XMLValidation
        
        '''<remarks/>
        XMLTransform
        
        '''<remarks/>
        UnexpectedError
        
        '''<remarks/>
        OrderExist
        
        '''<remarks/>
        InputPlugin
        
        '''<remarks/>
        OutputPlugin
        
        '''<remarks/>
        PaymentTypeNotFound
        
        '''<remarks/>
        CardTypeNotFound
        
        '''<remarks/>
        StatusNotPermited
        
        '''<remarks/>
        OrderNotFound
        
        '''<remarks/>
        OKComErros
        
        '''<remarks/>
        FilaNaoEncontrada
        
        '''<remarks/>
        InvalidRequest
        
        '''<remarks/>
        PaymentNotFound
        
        '''<remarks/>
        NsuExists
        
        '''<remarks/>
        NsuNotFound
        
        '''<remarks/>
        NsuDuplicate
        
        '''<remarks/>
        QuizInactive
        
        '''<remarks/>
        GenericFieldNotFound
        
        '''<remarks/>
        QuizNotFound
        
        '''<remarks/>
        UserNotAuthorized
        
        '''<remarks/>
        OrderWithoutDiagnostics
        
        '''<remarks/>
        ProductUnavailable
    End Enum
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(TransactionStatusCbk)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.clearsale.com.br/integration")>  _
    Partial Public Class TransactionStatus
        
        Private statusCodeField As StatusCode
        
        Private messageField As String
        
        '''<remarks/>
        Public Property StatusCode() As StatusCode
            Get
                Return Me.statusCodeField
            End Get
            Set
                Me.statusCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub SendOrders2CompletedEventHandler(ByVal sender As Object, ByVal e As SendOrders2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendOrders2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub SendOrdersCompletedEventHandler(ByVal sender As Object, ByVal e As SendOrdersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendOrdersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetPackageStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetPackageStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPackageStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetOrderStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrderStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrderStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetOrdersStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrdersStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrdersStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetReturnAnalysisCompletedEventHandler(ByVal sender As Object, ByVal e As GetReturnAnalysisCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReturnAnalysisCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub SetOrderAsReturnedCompletedEventHandler(ByVal sender As Object, ByVal e As SetOrderAsReturnedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetOrderAsReturnedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetAnalystCommentsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAnalystCommentsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAnalystCommentsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub OrderChargeBackCompletedEventHandler(ByVal sender As Object, ByVal e As OrderChargeBackCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OrderChargeBackCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionStatusCbk
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionStatusCbk)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub OrderChargeBackByNsuCompletedEventHandler(ByVal sender As Object, ByVal e As OrderChargeBackByNsuCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OrderChargeBackByNsuCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionStatusCbk
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionStatusCbk)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub SubmitInfoCompletedEventHandler(ByVal sender As Object, ByVal e As SubmitInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SubmitInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub CheckOrderStatusCompletedEventHandler(ByVal sender As Object, ByVal e As CheckOrderStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckOrderStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetQuizURLCompletedEventHandler(ByVal sender As Object, ByVal e As GetQuizURLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQuizURLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")>  _
    Public Delegate Sub GetPackageStatusCustomCompletedEventHandler(ByVal sender As Object, ByVal e As GetPackageStatusCustomCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPackageStatusCustomCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
